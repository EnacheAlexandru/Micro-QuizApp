version: "3.8"

services:

  mysql-question:
    container_name: mysql-question
    image: mysql:8.0.35
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: question-service
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes:
      - ./docker-volumes/mysql-question:/var/lib/mysql
    restart: always

  mysql-gateway:
    container_name: mysql-gateway
    image: mysql:8.0.35
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gateway-service
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes:
      - ./docker-volumes/mysql-gateway:/var/lib/mysql
    restart: always

  question-service:
    container_name: question-service
    build:
      context: ./question-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-question:3306/question-service
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
    depends_on:
      - mysql-question
      - discovery-service
    restart: always

  discovery-service:
    container_name: discovery-service
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    restart: always

#  question-service:
#    build:
#      context: ./question-service
#      dockerfile: Dockerfile
#    ports:
#      - "0:8080"
#    environment:
#      - spring.datasource.url=jdbc:mysql://mysql-question:3306/question-service
#      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
#    depends_on:
#      - mysql-question
#      - discovery-service
#    restart: always
#    deploy:
#      mode: replicated
#      replicas: 2